//
//  WatchlistInteractor.swift
//  Cryptotracker
//
//  Created by Abai Abakirov on 11/24/18.
//  Copyright (c) 2018 makeuseof. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol WatchlistBusinessLogic {
  func doSomething(request: Watchlist.Something.Request)
  func fetchFavorite()
}

protocol WatchlistDataStore {
  //var name: String { get set }
}

class WatchlistInteractor: WatchlistBusinessLogic, WatchlistDataStore {
  var presenter: WatchlistPresentationLogic?
  var worker: CoinsWorker?
  
  func doSomething(request: Watchlist.Something.Request) {
    worker?.fetchWatchlist { coins in
      let response = Watchlist.Something.Response(currencies: coins!)
      self.presenter?.presentSomething(response: response)
    }
  }
  
  func fetchFavorite() {
    worker?.fetchFavorite { coin in
      if coin == nil {
        self.presenter?.presentNoFavorite()
      } else {
        self.presenter?.presentFavorite(response: Watchlist.Favorite.Response(id: Int(coin!.id), symbol: coin!.symbol))
      }
    }
  }
}
