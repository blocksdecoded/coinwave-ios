//
//  PostsInteractor.swift
//  Cryptotracker
//
//  Created by Abai Abakirov on 11/19/18.
//  Copyright (c) 2018 makeuseof. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PostsBusinessLogic {
  func fetchPosts()
  func fetchNextPosts(request: Posts.FetchPosts.Request)
}

protocol PostsDataStore {
  //var name: String { get set }
}

class PostsInteractor: PostsBusinessLogic, PostsDataStore {
  var presenter: PostsPresentationLogic?
  var worker: PostsWorker?
  
  private var isLoadingNext = false
  
  // MARK: Do something
  
  func fetchPosts() {
    worker = PostsWorker()
    worker?.fetchPosts(completion: { result in
      switch result {
      case .success(let posts):
        let response = Posts.FetchPosts.Response(posts: posts)
        self.presenter?.presentPosts(response: response)
      case .failure(let error):
        self.presenter?.presentError(error)
      }
    })
  }
  
  func fetchNextPosts(request: Posts.FetchPosts.Request) {
    if isLoadingNext {
      return
    }
    
    isLoadingNext = true
    worker = PostsWorker()
    worker?.fetchNextPosts(date: request.date, completion: { result in
      self.isLoadingNext = false
      switch result {
      case .success(let posts):
        let response = Posts.FetchPosts.Response(posts: posts)
        self.presenter?.presentPosts(response: response)
      case .failure(let error):
        self.presenter?.presentError(error)
      }
    })
  }
}
