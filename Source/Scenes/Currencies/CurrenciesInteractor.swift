//
//  CurrenciesInteractor.swift
//  Cryptotracker
//
//  Created by Abai Abakirov on 11/17/18.
//  Copyright (c) 2018 makeuseof. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CurrenciesBusinessLogic {
  func doSomething(request: Currencies.FetchCoins.Request)
  func setFavorite(_ coin: CRCoin)
}

protocol CurrenciesDataStore {
  //var name: String { get set }
}

class CurrenciesInteractor: CurrenciesBusinessLogic, CurrenciesDataStore {
  
  var presenter: CurrenciesPresentationLogic?
  var worker: CoinsWorker?
  
  var data: CRRoot<CRDataList>?

  func doSomething(request: Currencies.FetchCoins.Request) {
    worker?.fetchCoins { coins, error in
      if error != nil {
        self.presenter?.presentError(error!)
      } else {
        if coins != nil && !coins!.isEmpty {
          self.presenter?.presentCurrencies(response: Currencies.FetchCoins.ViewModel(currencies: coins!))
        } else {
          self.presenter?.presentError(.noData)
        }
      }
    }
  }
  
  func setFavorite(_ coin: CRCoin) {
    var mutableCoin = coin
    mutableCoin.isFavorite = true
    worker?.setFavorite(mutableCoin)
  }
}
