//
//  AddToWatchlistInteractor.swift
//  Cryptotracker
//
//  Created by Abai Abakirov on 2/12/19.
//  Copyright (c) 2019 makeuseof. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AddToWatchlistBusinessLogic {
  func doSomething(request: AddToWatchlist.Something.Request)
  func addToWatchlist(request: AddToWatchlist.Add.Request)
}

protocol AddToWatchlistDataStore {
  //var name: String { get set }
}

class AddToWatchlistInteractor: AddToWatchlistBusinessLogic, AddToWatchlistDataStore {
  var presenter: AddToWatchlistPresentationLogic?
  var worker: CoinsWorker?

  func doSomething(request: AddToWatchlist.Something.Request) {
    worker?.fetchCoins(request.field, request.type, local: { coins, lastUpdated in
      
    }, remote: { currencies, error in
      if error != nil {
        self.presenter?.presentError(error!)
      } else {
        if currencies != nil && !currencies!.isEmpty {
          let response = AddToWatchlist.Something.Response(coins: currencies!)
          self.presenter?.presentSomething(response: response)
        } else {
          self.presenter?.presentError(.noData)
        }
      }
    })
  }
  
  func addToWatchlist(request: AddToWatchlist.Add.Request) {
    var mutableCoin = request.coin
    mutableCoin.isWatchlist = !mutableCoin.isWatchlist
    worker?.update(mutableCoin)
    self.presenter?.addToWatchlist(response: AddToWatchlist.Add.Response(position: request.position, coin: mutableCoin))
  }
}
