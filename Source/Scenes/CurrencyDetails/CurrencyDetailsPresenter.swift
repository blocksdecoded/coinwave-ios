//
//  CurrencyDetailsPresenter.swift
//  Cryptotracker
//
//  Created by Abai Abakirov on 11/24/18.
//  Copyright (c) 2018 makeuseof. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CurrencyDetailsPresentationLogic {
  func presentSomething(response: CurrencyDetails.Something.Response)
  func favorites(response: CurrencyDetails.AddFavorite.Response)
}

class CurrencyDetailsPresenter: CurrencyDetailsPresentationLogic {
  weak var viewController: CurrencyDetailsDisplayLogic?
  
  // MARK: Do something
  
  func presentSomething(response: CurrencyDetails.Something.Response) {
    var currInfo = [CurrencyDetails.Something.ViewModel.Info]()
    
    if let price = response.curr.price {
      currInfo.append(CurrencyDetails.Something.ViewModel.Info(name: "Price:",
                                                               value: "\(CurrencyConverter.convertLong(price))"))
    }
    
    if let marketCap = response.curr.marketCap {
      currInfo.append(CurrencyDetails.Something.ViewModel.Info(name: "Market Cap:",
                                                               value: "\(CurrencyConverter.convertLong(marketCap))"))
    }
    
    if let volume24h = response.curr.volume24h {
      currInfo.append(CurrencyDetails.Something.ViewModel.Info(name: "Volume 24h:",
                                                               value: "\(CurrencyConverter.convertLong(volume24h))"))
    }
    
    currInfo.append(CurrencyDetails.Something.ViewModel.Info(name: "Available supply:",
            value: "\(CurrencyConverter.convertLong(response.curr.circulatingSupply))"))
    
    currInfo.append(CurrencyDetails.Something.ViewModel.Info(name: "Total supply:",
              value: "\(CurrencyConverter.convertLong(response.curr.totalSupply))"))
    
    if let percent1h = response.curr.pricePercentChange1h {
      currInfo.append(CurrencyDetails.Something.ViewModel.Info(name: "% Change 1h:", value: "\(percent1h)"))
    }
    
    if let percent24h = response.curr.pricePercentChange24h {
      currInfo.append(CurrencyDetails.Something.ViewModel.Info(name: "% Change 24h:", value: "\(percent24h)"))
    }
    
    if let percent7d = response.curr.pricePercentChange7d {
      currInfo.append(CurrencyDetails.Something.ViewModel.Info(name: "% Change 1w:", value: "\(percent7d)"))
    }
    
    let viewModel = CurrencyDetails.Something.ViewModel(title: "\(response.curr.name) \(response.curr.symbol)",
                                                        saveCurrency: response.saveCurr,
                                                        info: currInfo)
    viewController?.displaySomething(viewModel: viewModel)
  }
  
  func favorites(response: CurrencyDetails.AddFavorite.Response) {
    viewController?.changeFavorites(viewModel: CurrencyDetails.AddFavorite.ViewModel(saveCurrency: response.saveCurrency))
  }
}
