//
//  CurrencyDetailsInteractor.swift
//  Cryptotracker
//
//  Created by Abai Abakirov on 11/24/18.
//  Copyright (c) 2018 makeuseof. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CurrencyDetailsBusinessLogic {
  func doSomething(request: CurrencyDetails.Something.Request)
  func addToFavorites(request: CurrencyDetails.AddFavorite.Request)
  func onOpenWeb()
}

protocol CurrencyDetailsDataStore {
  //var name: String { get set }
}

class CurrencyDetailsInteractor: CurrencyDetailsBusinessLogic, CurrencyDetailsDataStore {
  var presenter: CurrencyDetailsPresentationLogic?
  var worker: CurrencyDetailsWorker?
  //var name: String = ""
  
  // MARK: Do something
  
  func doSomething(request: CurrencyDetails.Something.Request) {
    worker = CurrencyDetailsWorker()
    worker?.doSomeWork(currID: request.currID, { currency in
      let response = CurrencyDetails.Something.Response(curr: currency,
                     saveCurr: self.worker?.loadSaveCurrency(currID: currency.id))
      self.presenter?.presentSomething(response: response)
    })
  }
  
  func addToFavorites(request: CurrencyDetails.AddFavorite.Request) {
    var curr = request.saveCurrency
    if curr.isWatchlist {
      curr.isWatchlist = false
      curr.isFavorite = false
    } else {
      curr.isWatchlist = true
    }
    worker?.addToFavorites(curr)
    let response = CurrencyDetails.AddFavorite.Response(saveCurrency: curr)
    self.presenter?.favorites(response: response)
  }
  
  func onOpenWeb() {
    presenter?.presentWebsite()
  }
}
