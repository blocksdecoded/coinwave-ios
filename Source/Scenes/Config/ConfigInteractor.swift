//
//  ConfigInteractor.swift
//  Cryptotracker
//
//  Created by Abai Abakirov on 3/13/19.
//  Copyright (c) 2019 makeuseof. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ConfigBusinessLogic {
  func viewDidLoad()
}

protocol ConfigDataStore {
  //var name: String { get set }
}

class ConfigInteractor: ConfigBusinessLogic, ConfigDataStore {
  var presenter: ConfigPresentationLogic?
  var worker: ConfigWorker?
  
  func viewDidLoad() {
    worker = ConfigWorker()
    worker?.getConfig { result in
      switch result {
      case .success(let bootstrap):
        Constants.coinsBaseURL = bootstrap.servers[0].trimmingCharacters(in: ["/"])
        self.presenter?.presentMainScreen()
      case .failure(let error):
        switch error {
        case .noData:
          // TODO: Find error message if no remote servers
          self.presenter?.presentError(CWError.noData.localizedDescription)
        default:
          self.presenter?.presentError(error.localizedDescription)
        }
      }
    }
  }
}
